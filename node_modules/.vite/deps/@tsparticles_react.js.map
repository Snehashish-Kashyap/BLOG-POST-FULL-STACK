{"version":3,"file":"@tsparticles_react.js","names":["n","squareExp","decayOffset","container","container","capacity","container","deleteCount","s","i"],"sources":["../../@tsparticles/engine/browser/Core/Utils/Constants.js","../../@tsparticles/engine/browser/Enums/Directions/MoveDirection.js","../../@tsparticles/engine/browser/Utils/TypeUtils.js","../../@tsparticles/engine/browser/Core/Utils/Vectors.js","../../@tsparticles/engine/browser/Utils/NumberUtils.js","../../@tsparticles/engine/browser/Enums/Modes/AnimationMode.js","../../@tsparticles/engine/browser/Enums/AnimationStatus.js","../../@tsparticles/engine/browser/Enums/Types/DestroyType.js","../../@tsparticles/engine/browser/Enums/Modes/PixelMode.js","../../@tsparticles/engine/browser/Enums/Types/StartValueType.js","../../@tsparticles/engine/browser/Utils/Utils.js","../../@tsparticles/engine/browser/Enums/Types/AlterType.js","../../@tsparticles/engine/browser/Utils/ColorUtils.js","../../@tsparticles/engine/browser/Utils/CanvasUtils.js","../../@tsparticles/engine/browser/Core/Canvas.js","../../@tsparticles/engine/browser/Enums/InteractivityDetect.js","../../@tsparticles/engine/browser/Core/Utils/EventListeners.js","../../@tsparticles/engine/browser/Enums/Types/EventType.js","../../@tsparticles/engine/browser/Options/Classes/OptionsColor.js","../../@tsparticles/engine/browser/Options/Classes/Background/Background.js","../../@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../../@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMask.js","../../@tsparticles/engine/browser/Options/Classes/FullScreen/FullScreen.js","../../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ClickEvent.js","../../@tsparticles/engine/browser/Enums/Types/DivType.js","../../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/DivEvent.js","../../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Parallax.js","../../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/HoverEvent.js","../../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ResizeEvent.js","../../@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Events.js","../../@tsparticles/engine/browser/Options/Classes/Interactivity/Modes/Modes.js","../../@tsparticles/engine/browser/Options/Classes/Interactivity/Interactivity.js","../../@tsparticles/engine/browser/Options/Classes/ManualParticle.js","../../@tsparticles/engine/browser/Enums/Modes/ResponsiveMode.js","../../@tsparticles/engine/browser/Options/Classes/Responsive.js","../../@tsparticles/engine/browser/Enums/Modes/ThemeMode.js","../../@tsparticles/engine/browser/Options/Classes/Theme/ThemeDefault.js","../../@tsparticles/engine/browser/Options/Classes/Theme/Theme.js","../../@tsparticles/engine/browser/Options/Classes/AnimationOptions.js","../../@tsparticles/engine/browser/Options/Classes/ColorAnimation.js","../../@tsparticles/engine/browser/Options/Classes/HslAnimation.js","../../@tsparticles/engine/browser/Options/Classes/AnimatableColor.js","../../@tsparticles/engine/browser/Enums/Modes/CollisionMode.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../../@tsparticles/engine/browser/Options/Classes/ValueWithRandom.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounce.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Collisions/Collisions.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Effect/Effect.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAngle.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAttract.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveCenter.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveGravity.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Move/Path/MovePath.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrailFill.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrail.js","../../@tsparticles/engine/browser/Enums/Modes/OutMode.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Move/OutModes.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Move/Spin.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Move/Move.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Opacity/OpacityAnimation.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Opacity/Opacity.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesDensity.js","../../@tsparticles/engine/browser/Enums/Modes/LimitMode.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumberLimit.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumber.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Shadow.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Shape/Shape.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Size/SizeAnimation.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Size/Size.js","../../@tsparticles/engine/browser/Options/Classes/Particles/Stroke.js","../../@tsparticles/engine/browser/Options/Classes/Particles/ZIndex/ZIndex.js","../../@tsparticles/engine/browser/Options/Classes/Particles/ParticlesOptions.js","../../@tsparticles/engine/browser/Utils/OptionsUtils.js","../../@tsparticles/engine/browser/Options/Classes/Options.js","../../@tsparticles/engine/browser/Enums/Types/InteractorType.js","../../@tsparticles/engine/browser/Core/Utils/InteractionManager.js","../../@tsparticles/engine/browser/Enums/Types/ParticleOutType.js","../../@tsparticles/engine/browser/Core/Particle.js","../../@tsparticles/engine/browser/Core/Utils/Point.js","../../@tsparticles/engine/browser/Types/RangeType.js","../../@tsparticles/engine/browser/Core/Utils/Ranges.js","../../@tsparticles/engine/browser/Core/Utils/QuadTree.js","../../@tsparticles/engine/browser/Core/Particles.js","../../@tsparticles/engine/browser/Core/Retina.js","../../@tsparticles/engine/browser/Core/Container.js","../../@tsparticles/engine/browser/Utils/EventDispatcher.js","../../@tsparticles/engine/browser/Core/Engine.js","../../@tsparticles/engine/browser/init.js","../../@tsparticles/engine/browser/index.js","../../@tsparticles/react/dist/Particles.js","../../@tsparticles/react/dist/index.js"],"sourcesContent":["export const generatedAttribute = \"generated\", mouseDownEvent = \"pointerdown\", mouseUpEvent = \"pointerup\", mouseLeaveEvent = \"pointerleave\", mouseOutEvent = \"pointerout\", mouseMoveEvent = \"pointermove\", touchStartEvent = \"touchstart\", touchEndEvent = \"touchend\", touchMoveEvent = \"touchmove\", touchCancelEvent = \"touchcancel\", resizeEvent = \"resize\", visibilityChangeEvent = \"visibilitychange\", errorPrefix = \"tsParticles - Error\", percentDenominator = 100, half = 0.5, millisecondsToSeconds = 1000, originPoint = {\n    x: 0,\n    y: 0,\n    z: 0,\n}, defaultTransform = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n}, randomColorValue = \"random\", midColorValue = \"mid\", double = 2, doublePI = Math.PI * double, defaultFps = 60, defaultAlpha = 1, generatedTrue = \"true\", generatedFalse = \"false\", canvasTag = \"canvas\", defaultRetryCount = 0, squareExp = 2, qTreeCapacity = 4, defaultRemoveQuantity = 1, defaultRatio = 1, defaultReduceFactor = 1, subdivideCount = 4, inverseFactorNumerator = 1.0, rgbMax = 255, hMax = 360, sMax = 100, lMax = 100, hMin = 0, sMin = 0, hPhase = 60, empty = 0, quarter = 0.25, threeQuarter = half + quarter, minVelocity = 0, defaultTransformValue = 1, minimumSize = 0, minimumLength = 0, zIndexFactorOffset = 1, defaultOpacity = 1, clickRadius = 1, touchEndLengthOffset = 1, minCoordinate = 0, removeDeleteCount = 1, removeMinIndex = 0, defaultFpsLimit = 120, minFpsLimit = 0, canvasFirstIndex = 0, loadRandomFactor = 10000, loadMinIndex = 0, one = 1, none = 0, decayOffset = 1, tryCountIncrement = 1, minRetries = 0, rollFactor = 1, minZ = 0, defaultRadius = 0, posOffset = -quarter, sizeFactor = 1.5, minLimit = 0, countOffset = 1, minCount = 0, minIndex = 0, manualCount = 0, lengthOffset = 1, defaultDensityFactor = 1, deleteCount = 1, touchDelay = 500, manualDefaultPosition = 50, defaultAngle = 0, identity = 1, minStrokeWidth = 0, lFactor = 1, lMin = 0, rgbFactor = 255, triple = 3, sextuple = 6, sNormalizedOffset = 1, phaseNumerator = 1, defaultRgbMin = 0, defaultVelocity = 0, defaultLoops = 0, defaultTime = 0;\n","export var MoveDirection;\n(function (MoveDirection) {\n    MoveDirection[\"bottom\"] = \"bottom\";\n    MoveDirection[\"bottomLeft\"] = \"bottom-left\";\n    MoveDirection[\"bottomRight\"] = \"bottom-right\";\n    MoveDirection[\"left\"] = \"left\";\n    MoveDirection[\"none\"] = \"none\";\n    MoveDirection[\"right\"] = \"right\";\n    MoveDirection[\"top\"] = \"top\";\n    MoveDirection[\"topLeft\"] = \"top-left\";\n    MoveDirection[\"topRight\"] = \"top-right\";\n    MoveDirection[\"outside\"] = \"outside\";\n    MoveDirection[\"inside\"] = \"inside\";\n})(MoveDirection || (MoveDirection = {}));\n","export function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\nexport function isNull(arg) {\n    return arg === null || arg === undefined;\n}\n","import { errorPrefix, inverseFactorNumerator, none, originPoint, squareExp } from \"./Constants.js\";\nimport { isNumber } from \"../../Utils/TypeUtils.js\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : originPoint.z;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? originPoint.z;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(originPoint.x, originPoint.y, originPoint.z);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** squareExp + this.y ** squareExp;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != none) {\n            this.multTo(inverseFactorNumerator / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), originPoint.z);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : originPoint.z;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, originPoint.z);\n    }\n    static get origin() {\n        return Vector.create(originPoint.x, originPoint.y);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { double, doublePI, empty, half, percentDenominator, quarter, threeQuarter } from \"../Core/Utils/Constants.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nimport { isNumber } from \"./TypeUtils.js\";\nlet _random = Math.random;\nconst _animationLoop = {\n    nextFrame: (cb) => requestAnimationFrame(cb),\n    cancel: (idx) => cancelAnimationFrame(idx),\n};\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    const min = 0, max = 1;\n    return clamp(_random(), min, max - Number.EPSILON);\n}\nexport function setAnimationFunctions(nextFrame, cancel) {\n    _animationLoop.nextFrame = (callback) => nextFrame(callback);\n    _animationLoop.cancel = (handle) => cancel(handle);\n}\nexport function animate(fn) {\n    return _animationLoop.nextFrame(fn);\n}\nexport function cancelAnimation(handle) {\n    _animationLoop.cancel(handle);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r), minOffset = 0;\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = minOffset;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y, squareExp = 2;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** squareExp + dy ** squareExp) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function degToRad(degrees) {\n    const PIDeg = 180;\n    return (degrees * Math.PI) / PIDeg;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return degToRad(direction);\n    }\n    switch (direction) {\n        case MoveDirection.top:\n            return -Math.PI * half;\n        case MoveDirection.topRight:\n            return -Math.PI * quarter;\n        case MoveDirection.right:\n            return empty;\n        case MoveDirection.bottomRight:\n            return Math.PI * quarter;\n        case MoveDirection.bottom:\n            return Math.PI * half;\n        case MoveDirection.bottomLeft:\n            return Math.PI * threeQuarter;\n        case MoveDirection.left:\n            return Math.PI;\n        case MoveDirection.topLeft:\n            return -Math.PI * threeQuarter;\n        case MoveDirection.inside:\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case MoveDirection.outside:\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * doublePI;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * double * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position?.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / percentDenominator,\n            y: (data.position.y * data.size.height) / percentDenominator,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * percentDenominator) * data.size.width) / percentDenominator,\n        y: ((data.position?.y ?? getRandom() * percentDenominator) * data.size.height) / percentDenominator,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    const defaultAlpha = 1;\n    if (!input) {\n        return defaultAlpha;\n    }\n    return input.endsWith(\"%\") ? parseFloat(input) / percentDenominator : parseFloat(input);\n}\n","export var AnimationMode;\n(function (AnimationMode) {\n    AnimationMode[\"auto\"] = \"auto\";\n    AnimationMode[\"increase\"] = \"increase\";\n    AnimationMode[\"decrease\"] = \"decrease\";\n    AnimationMode[\"random\"] = \"random\";\n})(AnimationMode || (AnimationMode = {}));\n","export var AnimationStatus;\n(function (AnimationStatus) {\n    AnimationStatus[\"increasing\"] = \"increasing\";\n    AnimationStatus[\"decreasing\"] = \"decreasing\";\n})(AnimationStatus || (AnimationStatus = {}));\n","export var DestroyType;\n(function (DestroyType) {\n    DestroyType[\"none\"] = \"none\";\n    DestroyType[\"max\"] = \"max\";\n    DestroyType[\"min\"] = \"min\";\n})(DestroyType || (DestroyType = {}));\n","export var PixelMode;\n(function (PixelMode) {\n    PixelMode[\"precise\"] = \"precise\";\n    PixelMode[\"percent\"] = \"percent\";\n})(PixelMode || (PixelMode = {}));\n","export var StartValueType;\n(function (StartValueType) {\n    StartValueType[\"max\"] = \"max\";\n    StartValueType[\"min\"] = \"min\";\n    StartValueType[\"random\"] = \"random\";\n})(StartValueType || (StartValueType = {}));\n","import { clamp, collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"./NumberUtils.js\";\nimport { half, millisecondsToSeconds, minVelocity, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { isArray, isNull, isObject } from \"./TypeUtils.js\";\nimport { AnimationMode } from \"../Enums/Modes/AnimationMode.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { DestroyType } from \"../Enums/Types/DestroyType.js\";\nimport { OutModeDirection } from \"../Enums/Directions/OutModeDirection.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { StartValueType } from \"../Enums/Types/StartValueType.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction memoize(fn) {\n    const cache = new Map();\n    return (...args) => {\n        const key = JSON.stringify(args);\n        if (cache.has(key)) {\n            return cache.get(key);\n        }\n        const result = fn(...args);\n        cache.set(key, result);\n        return result;\n    };\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) * half && velocity > minVelocity) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) * half && velocity < minVelocity)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, selector => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some(t => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeIntersectionObserver(callback) {\n    if (isSsr() || typeof IntersectionObserver === \"undefined\") {\n        return;\n    }\n    return new IntersectionObserver(callback);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    const invalidIndex = -1;\n    return value === array || (isArray(array) && array.indexOf(value) > invalidIndex);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    const minRadius = 0;\n    return areBoundsInside(calculateBounds(point, radius ?? minRadius), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === OutModeDirection.bottom) {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.left)) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.right)) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === OutModeDirection.top)) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map(v => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, t => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, div => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, selector => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, div => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getRangeValue(p.options.bounce.horizontal.value), getRangeValue(p.options.bounce.vertical.value)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1), minimumDistance = 0;\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < minimumDistance) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), bounceOptions = particle.options.bounce, resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getRangeValue(bounceOptions.horizontal.value),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getRangeValue(bounceOptions.vertical.value),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    const defaultIndex = 0;\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, defaultIndex);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    if (isArray(obj)) {\n        return obj.find((t, index) => callback(t, index));\n    }\n    const defaultIndex = 0;\n    return callback(obj, defaultIndex) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * millisecondsToSeconds,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    }, decayOffset = 1;\n    if (animationOptions.enable) {\n        res.decay = decayOffset - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case AnimationMode.increase:\n                res.status = AnimationStatus.increasing;\n                break;\n            case AnimationMode.decrease:\n                res.status = AnimationStatus.decreasing;\n                break;\n            case AnimationMode.random:\n                res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                break;\n        }\n        const autoStatus = animationOptions.mode === AnimationMode.auto;\n        switch (animationOptions.startValue) {\n            case StartValueType.min:\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = AnimationStatus.increasing;\n                }\n                break;\n            case StartValueType.max:\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = AnimationStatus.decreasing;\n                }\n                break;\n            case StartValueType.random:\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === PixelMode.percent;\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / percentDenominator) * canvasSize.width,\n            y: (positionOrSize.y / percentDenominator) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / percentDenominator) * canvasSize.width,\n            height: (positionOrSize.height / percentDenominator) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nfunction checkDestroy(particle, destroyType, value, minValue, maxValue) {\n    switch (destroyType) {\n        case DestroyType.max:\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case DestroyType.min:\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateAnimation(particle, data, changeDirection, destroyType, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minDecay = 1;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    const velocity = (data.velocity ?? minVelocity) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? minDecay;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    switch (data.status) {\n        case AnimationStatus.increasing:\n            if (data.value >= maxValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.decreasing;\n                }\n                else {\n                    data.value -= maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += velocity;\n            }\n            break;\n        case AnimationStatus.decreasing:\n            if (data.value <= minValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.increasing;\n                }\n                else {\n                    data.value += maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= velocity;\n            }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, destroyType, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\nexport function cloneStyle(style) {\n    const clonedStyle = document.createElement(\"div\").style;\n    if (!style) {\n        return clonedStyle;\n    }\n    for (const key in style) {\n        const styleKey = style[key];\n        if (!Object.prototype.hasOwnProperty.call(style, key) || isNull(styleKey)) {\n            continue;\n        }\n        const styleValue = style.getPropertyValue?.(styleKey);\n        if (!styleValue) {\n            continue;\n        }\n        const stylePriority = style.getPropertyPriority?.(styleKey);\n        if (!stylePriority) {\n            clonedStyle.setProperty?.(styleKey, styleValue);\n        }\n        else {\n            clonedStyle.setProperty?.(styleKey, styleValue, stylePriority);\n        }\n    }\n    return clonedStyle;\n}\nfunction computeFullScreenStyle(zIndex) {\n    const fullScreenStyle = document.createElement(\"div\").style, radix = 10, style = {\n        width: \"100%\",\n        height: \"100%\",\n        margin: \"0\",\n        padding: \"0\",\n        borderWidth: \"0\",\n        position: \"fixed\",\n        zIndex: zIndex.toString(radix),\n        \"z-index\": zIndex.toString(radix),\n        top: \"0\",\n        left: \"0\",\n    };\n    for (const key in style) {\n        const value = style[key];\n        fullScreenStyle.setProperty(key, value);\n    }\n    return fullScreenStyle;\n}\nexport const getFullScreenStyle = memoize(computeFullScreenStyle);\n","export var AlterType;\n(function (AlterType) {\n    AlterType[\"darken\"] = \"darken\";\n    AlterType[\"enlighten\"] = \"enlighten\";\n})(AlterType || (AlterType = {}));\n","import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, mix, randomInRange, setRangeValue, } from \"./NumberUtils.js\";\nimport { decayOffset, defaultLoops, defaultOpacity, defaultRgbMin, defaultTime, defaultVelocity, double, hMax, hMin, hPhase, half, identity, lMax, lMin, midColorValue, millisecondsToSeconds, percentDenominator, phaseNumerator, randomColorValue, rgbFactor, rgbMax, sMax, sMin, sNormalizedOffset, sextuple, triple, } from \"../Core/Utils/Constants.js\";\nimport { isArray, isString } from \"./TypeUtils.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { itemFromArray } from \"./Utils.js\";\nfunction stringToRgba(engine, input) {\n    if (!input) {\n        return;\n    }\n    for (const manager of engine.colorManagers.values()) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n}\nexport function rangeColorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(engine, color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(engine, color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(engine, color, index, useIndex = true) {\n    const rgb = colorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(engine, color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / rgbMax, g1 = color.g / rgbMax, b1 = color.b / rgbMax, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: hMin,\n        l: (max + min) * half,\n        s: sMin,\n    };\n    if (max !== min) {\n        res.s = res.l < half ? (max - min) / (max + min) : (max - min) / (double - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? double + (b1 - r1) / (max - min) : double * double + (r1 - g1) / (max - min));\n    }\n    res.l *= lMax;\n    res.s *= sMax;\n    res.h *= hPhase;\n    if (res.h < hMin) {\n        res.h += hMax;\n    }\n    if (res.h >= hMax) {\n        res.h -= hMax;\n    }\n    return res;\n}\nexport function stringToAlpha(engine, input) {\n    return stringToRgba(engine, input)?.a;\n}\nexport function stringToRgb(engine, input) {\n    return stringToRgba(engine, input);\n}\nexport function hslToRgb(hsl) {\n    const h = ((hsl.h % hMax) + hMax) % hMax, s = Math.max(sMin, Math.min(sMax, hsl.s)), l = Math.max(lMin, Math.min(lMax, hsl.l)), hNormalized = h / hMax, sNormalized = s / sMax, lNormalized = l / lMax;\n    if (s === sMin) {\n        const grayscaleValue = Math.round(lNormalized * rgbFactor);\n        return { r: grayscaleValue, g: grayscaleValue, b: grayscaleValue };\n    }\n    const channel = (temp1, temp2, temp3) => {\n        const temp3Min = 0, temp3Max = 1;\n        if (temp3 < temp3Min) {\n            temp3++;\n        }\n        if (temp3 > temp3Max) {\n            temp3--;\n        }\n        if (temp3 * sextuple < temp3Max) {\n            return temp1 + (temp2 - temp1) * sextuple * temp3;\n        }\n        if (temp3 * double < temp3Max) {\n            return temp2;\n        }\n        if (temp3 * triple < temp3Max * double) {\n            const temp3Offset = double / triple;\n            return temp1 + (temp2 - temp1) * (temp3Offset - temp3) * sextuple;\n        }\n        return temp1;\n    }, temp1 = lNormalized < half\n        ? lNormalized * (sNormalizedOffset + sNormalized)\n        : lNormalized + sNormalized - lNormalized * sNormalized, temp2 = double * lNormalized - temp1, phaseThird = phaseNumerator / triple, red = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized + phaseThird)), green = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized)), blue = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized - phaseThird));\n    return { r: Math.round(red), g: Math.round(green), b: Math.round(blue) };\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? defaultRgbMin, fixedMax = rgbMax + identity;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? defaultOpacity})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? defaultOpacity})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(engine, optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb(engine, {\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb(engine, {\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / percentDenominator) * reduceFactor;\n        colorValue.decay = decayOffset - getRangeValue(colorAnimation.decay);\n        colorValue.status = AnimationStatus.increasing;\n        colorValue.loops = defaultLoops;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = defaultTime;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * millisecondsToSeconds;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n        colorValue.offset = setRangeValue(colorAnimation.offset);\n    }\n    else {\n        colorValue.velocity = defaultVelocity;\n    }\n}\nexport function updateColorValue(data, range, decrease, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minOffset = 0, velocityFactor = 3.6;\n    if (!data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    const offset = data.offset ? randomInRange(data.offset) : minOffset, velocity = (data.velocity ?? minVelocity) * delta.factor + offset * velocityFactor, decay = data.decay ?? identity, max = getRangeMax(range), min = getRangeMin(range);\n    if (!decrease || data.status === AnimationStatus.increasing) {\n        data.value += velocity;\n        if (data.value > max) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            if (decrease) {\n                data.status = AnimationStatus.decreasing;\n            }\n            else {\n                data.value -= max;\n            }\n        }\n    }\n    else {\n        data.value -= velocity;\n        const minValue = 0;\n        if (data.value < minValue) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            data.status = AnimationStatus.increasing;\n        }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    data.value = clamp(data.value, min, max);\n}\nexport function updateColor(color, delta) {\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color, ranges = {\n        h: { min: 0, max: 360 },\n        s: { min: 0, max: 100 },\n        l: { min: 0, max: 100 },\n    };\n    if (h) {\n        updateColorValue(h, ranges.h, false, delta);\n    }\n    if (s) {\n        updateColorValue(s, ranges.s, true, delta);\n    }\n    if (l) {\n        updateColorValue(l, ranges.l, true, delta);\n    }\n}\n","import { defaultAngle, defaultTransform, identity, lFactor, minStrokeWidth, originPoint, } from \"../Core/Utils/Constants.js\";\nimport { AlterType } from \"../Enums/Types/AlterType.js\";\nimport { getStyleFromRgb } from \"./ColorUtils.js\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, originPoint.x, originPoint.y, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data, pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : defaultAngle), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, rotating = !!angle, transformData = {\n        a: rotateData.cos * (transform.a ?? defaultTransform.a),\n        b: rotating ? rotateData.sin * (transform.b ?? identity) : (transform.b ?? defaultTransform.b),\n        c: rotating ? -rotateData.sin * (transform.c ?? identity) : (transform.c ?? defaultTransform.c),\n        d: rotateData.cos * (transform.d ?? defaultTransform.d),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? minStrokeWidth;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    const drawData = {\n        container,\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        transformData,\n        strokeWidth,\n    };\n    drawShape(drawData);\n    drawShapeAfterDraw(drawData);\n    drawEffect(drawData);\n    context.globalCompositeOperation = \"source-over\";\n    context.resetTransform();\n}\nexport function drawEffect(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.effect) {\n        return;\n    }\n    const drawer = container.effectDrawers.get(particle.effect);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawShape(data) {\n    const { container, context, particle, radius, opacity, delta, strokeWidth, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    context.beginPath();\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n    if (particle.shapeClose) {\n        context.closePath();\n    }\n    if (strokeWidth > minStrokeWidth) {\n        context.stroke();\n    }\n    if (particle.shapeFill) {\n        context.fill();\n    }\n}\nexport function drawShapeAfterDraw(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer?.afterDraw) {\n        return;\n    }\n    drawer.afterDraw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === AlterType.darken ? -lFactor : lFactor) * value,\n    };\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { defaultOpacity, defaultTransformValue, generatedAttribute, inverseFactorNumerator, minimumLength, minimumSize, zIndexFactorOffset, } from \"./Utils/Constants.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultTransformValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    const keys = new Set();\n    for (const key in elementStyle) {\n        if (!Object.prototype.hasOwnProperty.call(elementStyle, key)) {\n            continue;\n        }\n        keys.add(elementStyle[key]);\n    }\n    for (const key in style) {\n        if (!Object.prototype.hasOwnProperty.call(style, key)) {\n            continue;\n        }\n        keys.add(style[key]);\n    }\n    for (const key of keys) {\n        const value = style.getPropertyValue(key);\n        if (!value) {\n            elementStyle.removeProperty(key);\n        }\n        else {\n            elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n        }\n    }\n}\nexport class Canvas {\n    constructor(container, engine) {\n        this.container = container;\n        this._applyPostDrawUpdaters = particle => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = particle => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(this._engine, plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(this._engine, plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(this._engine, color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style || !Object.prototype.hasOwnProperty.call(options.style, key)) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const opacity = inverseFactorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(this._engine, trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = baseColor => {\n            this.draw(ctx => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw(ctx => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver(observer => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            const pointerEvents = this._pointerEvents;\n            element.style.pointerEvents = pointerEvents;\n            element.setAttribute(\"pointer-events\", pointerEvents);\n            this._safeMutationObserver(observer => {\n                if (!element || !(element instanceof Node)) {\n                    return;\n                }\n                observer.observe(element, { attributes: true });\n            });\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!element || !originalStyle) {\n                return;\n            }\n            setStyle(element, originalStyle, true);\n        };\n        this._safeMutationObserver = callback => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            setStyle(element, getFullScreenStyle(this.container.actualOptions.fullScreen.zIndex), true);\n        };\n        this._engine = engine;\n        this._standardSize = {\n            height: 0,\n            width: 0,\n        };\n        const pxRatio = container.retina.pixelRatio, stdSize = this._standardSize;\n        this.size = {\n            height: stdSize.height * pxRatio,\n            width: stdSize.width * pxRatio,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n        this._pointerEvents = \"none\";\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw(ctx => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n            this.element = undefined;\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return undefined;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw(ctx => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw(ctx => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = safeMutationObserver(records => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(this._engine, background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const plugin of this.container.plugins.values()) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = cloneStyle(this.element.style);\n        const standardSize = this._standardSize;\n        standardSize.height = canvas.offsetHeight;\n        standardSize.width = canvas.offsetWidth;\n        const pxRatio = this.container.retina.pixelRatio, retinaSize = this.size;\n        canvas.height = retinaSize.height = standardSize.height * pxRatio;\n        canvas.width = retinaSize.width = standardSize.width * pxRatio;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver(obs => obs.disconnect());\n        this.container.retina.init();\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw(ctx => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, currentSize = container.canvas._standardSize, newSize = {\n            width: this.element.offsetWidth,\n            height: this.element.offsetHeight,\n        }, pxRatio = container.retina.pixelRatio, retinaSize = {\n            width: newSize.width * pxRatio,\n            height: newSize.height * pxRatio,\n        };\n        if (newSize.height === currentSize.height &&\n            newSize.width === currentSize.width &&\n            retinaSize.height === this.element.height &&\n            retinaSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...currentSize };\n        currentSize.height = newSize.height;\n        currentSize.width = newSize.width;\n        const canvasSize = this.size;\n        this.element.width = canvasSize.width = retinaSize.width;\n        this.element.height = canvasSize.height = retinaSize.height;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: currentSize.width / oldSize.width,\n                height: currentSize.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    setPointerEvents(type) {\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        this._pointerEvents = type;\n        this._repairStyle();\n    }\n    stop() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw(ctx => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","export var InteractivityDetect;\n(function (InteractivityDetect) {\n    InteractivityDetect[\"canvas\"] = \"canvas\";\n    InteractivityDetect[\"parent\"] = \"parent\";\n    InteractivityDetect[\"window\"] = \"window\";\n})(InteractivityDetect || (InteractivityDetect = {}));\n","import { double, lengthOffset, millisecondsToSeconds, minCoordinate, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchDelay, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { InteractivityDetect } from \"../../Enums/InteractivityDetect.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, mode => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find(theme => theme.name === themeName);\n            if (theme?.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document?.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvas = container.canvas;\n            canvas.setPointerEvents(html === canvas.element ? \"initial\" : \"none\");\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === InteractivityDetect.window) {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === InteractivityDetect.parent && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = add => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find(e => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const plugin of container.plugins.values()) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = e => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === InteractivityDetect.parent) {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? minCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? minCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","export var EventType;\n(function (EventType) {\n    EventType[\"configAdded\"] = \"configAdded\";\n    EventType[\"containerInit\"] = \"containerInit\";\n    EventType[\"particlesSetup\"] = \"particlesSetup\";\n    EventType[\"containerStarted\"] = \"containerStarted\";\n    EventType[\"containerStopped\"] = \"containerStopped\";\n    EventType[\"containerDestroyed\"] = \"containerDestroyed\";\n    EventType[\"containerPaused\"] = \"containerPaused\";\n    EventType[\"containerPlay\"] = \"containerPlay\";\n    EventType[\"containerBuilt\"] = \"containerBuilt\";\n    EventType[\"particleAdded\"] = \"particleAdded\";\n    EventType[\"particleDestroyed\"] = \"particleDestroyed\";\n    EventType[\"particleRemoved\"] = \"particleRemoved\";\n})(EventType || (EventType = {}));\n","import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull, isString } from \"../../../Utils/TypeUtils.js\";\nimport { BackgroundMaskCover } from \"./BackgroundMaskCover.js\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover, color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined || cover.image !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","export var DivType;\n(function (DivType) {\n    DivType[\"circle\"] = \"circle\";\n    DivType[\"rectangle\"] = \"rectangle\";\n})(DivType || (DivType = {}));\n","import { DivType } from \"../../../../Enums/Types/DivType.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = DivType.circle;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { ClickEvent } from \"./ClickEvent.js\";\nimport { DivEvent } from \"./DivEvent.js\";\nimport { HoverEvent } from \"./HoverEvent.js\";\nimport { ResizeEvent } from \"./ResizeEvent.js\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.onClick.load(data.onClick);\n        const onDiv = data.onDiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, t => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover);\n        this.resize.load(data.resize);\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events.js\";\nimport { InteractivityDetect } from \"../../../Enums/InteractivityDetect.js\";\nimport { Modes } from \"./Modes/Modes.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = InteractivityDetect.window;\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const detectsOn = data.detectsOn;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { PixelMode } from \"../../Enums/Modes/PixelMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { manualDefaultPosition } from \"../../Core/Utils/Constants.js\";\nexport class ManualParticle {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? manualDefaultPosition,\n                y: data.position.y ?? manualDefaultPosition,\n                mode: data.position.mode ?? PixelMode.percent,\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export var ResponsiveMode;\n(function (ResponsiveMode) {\n    ResponsiveMode[\"screen\"] = \"screen\";\n    ResponsiveMode[\"canvas\"] = \"canvas\";\n})(ResponsiveMode || (ResponsiveMode = {}));\n","import { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = ResponsiveMode.canvas;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.maxWidth)) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (!isNull(data.mode)) {\n            if (data.mode === ResponsiveMode.screen) {\n                this.mode = ResponsiveMode.screen;\n            }\n            else {\n                this.mode = ResponsiveMode.canvas;\n            }\n        }\n        if (!isNull(data.options)) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export var ThemeMode;\n(function (ThemeMode) {\n    ThemeMode[\"any\"] = \"any\";\n    ThemeMode[\"dark\"] = \"dark\";\n    ThemeMode[\"light\"] = \"light\";\n})(ThemeMode || (ThemeMode = {}));\n","import { ThemeMode } from \"../../../Enums/Modes/ThemeMode.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = ThemeMode.any;\n        this.value = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault.js\";\nimport { deepExtend } from \"../../../Utils/Utils.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { AnimationMode } from \"../../Enums/Modes/AnimationMode.js\";\nimport { StartValueType } from \"../../Enums/Types/StartValueType.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = AnimationMode.auto;\n        this.startValue = StartValueType.random;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { AnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ColorAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.offset = 0;\n        this.sync = true;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nimport { HslAnimation } from \"./HslAnimation.js\";\nimport { OptionsColor } from \"./OptionsColor.js\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export var CollisionMode;\n(function (CollisionMode) {\n    CollisionMode[\"absorb\"] = \"absorb\";\n    CollisionMode[\"bounce\"] = \"bounce\";\n    CollisionMode[\"destroy\"] = \"destroy\";\n})(CollisionMode || (CollisionMode = {}));\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ValueWithRandom {\n    constructor() {\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionMode } from \"../../../../Enums/Modes/CollisionMode.js\";\nimport { CollisionsAbsorb } from \"./CollisionsAbsorb.js\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap.js\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = CollisionMode.bounce;\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Effect {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const effect in options) {\n                const item = options[effect];\n                if (item) {\n                    this.options[effect] = deepExtend(this.options[effect] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.rotate) {\n            const rotateX = data.rotate.x;\n            if (rotateX !== undefined) {\n                this.rotate.x = rotateX;\n            }\n            const rotateY = data.rotate.y;\n            if (rotateY !== undefined) {\n                this.rotate.y = rotateY;\n            }\n        }\n    }\n}\n","import { PixelMode } from \"../../../../Enums/Modes/PixelMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = PixelMode.percent;\n        this.radius = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom.js\";\nimport { deepExtend } from \"../../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../../Utils/TypeUtils.js\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrailFill {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined) {\n            this.fill.load(data.fill);\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export var OutMode;\n(function (OutMode) {\n    OutMode[\"bounce\"] = \"bounce\";\n    OutMode[\"none\"] = \"none\";\n    OutMode[\"out\"] = \"out\";\n    OutMode[\"destroy\"] = \"destroy\";\n    OutMode[\"split\"] = \"split\";\n})(OutMode || (OutMode = {}));\n","import { OutMode } from \"../../../../Enums/Modes/OutMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OutModes {\n    constructor() {\n        this.default = OutMode.out;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { MoveDirection } from \"../../../../Enums/Directions/MoveDirection.js\";\nimport { isNull, isNumber, isObject } from \"../../../../Utils/TypeUtils.js\";\nimport { MoveAngle } from \"./MoveAngle.js\";\nimport { MoveAttract } from \"./MoveAttract.js\";\nimport { MoveCenter } from \"./MoveCenter.js\";\nimport { MoveGravity } from \"./MoveGravity.js\";\nimport { MovePath } from \"./Path/MovePath.js\";\nimport { MoveTrail } from \"./MoveTrail.js\";\nimport { OutModes } from \"./OutModes.js\";\nimport { Spin } from \"./Spin.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = MoveDirection.none;\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 2;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation.js\";\nimport { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Opacity extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.value = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","export var LimitMode;\n(function (LimitMode) {\n    LimitMode[\"delete\"] = \"delete\";\n    LimitMode[\"wait\"] = \"wait\";\n})(LimitMode || (LimitMode = {}));\n","import { LimitMode } from \"../../../../Enums/Modes/LimitMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumberLimit {\n    constructor() {\n        this.mode = LimitMode.delete;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity.js\";\nimport { ParticlesNumberLimit } from \"./ParticlesNumberLimit.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = new ParticlesNumberLimit();\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.density.load(data.density);\n        this.limit.load(data.limit);\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Shape {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 5;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { SizeAnimation } from \"./SizeAnimation.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Size extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.value = 3;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils.js\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils.js\";\nimport { AnimatableColor } from \"../AnimatableColor.js\";\nimport { Collisions } from \"./Collisions/Collisions.js\";\nimport { Effect } from \"./Effect/Effect.js\";\nimport { Move } from \"./Move/Move.js\";\nimport { Opacity } from \"./Opacity/Opacity.js\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce.js\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber.js\";\nimport { Shadow } from \"./Shadow.js\";\nimport { Shape } from \"./Shape/Shape.js\";\nimport { Size } from \"./Size/Size.js\";\nimport { Stroke } from \"./Stroke.js\";\nimport { ZIndex } from \"./ZIndex/ZIndex.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.effect = new Effect();\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.groups !== undefined) {\n            for (const group of Object.keys(data.groups)) {\n                if (!Object.hasOwn(data.groups, group)) {\n                    continue;\n                }\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        this.effect.load(data.effect);\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, t => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions.js\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { isBoolean, isNull } from \"../../Utils/TypeUtils.js\";\nimport { Background } from \"./Background/Background.js\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask.js\";\nimport { FullScreen } from \"./FullScreen/FullScreen.js\";\nimport { Interactivity } from \"./Interactivity/Interactivity.js\";\nimport { ManualParticle } from \"./ManualParticle.js\";\nimport { Responsive } from \"./Responsive.js\";\nimport { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { Theme } from \"./Theme/Theme.js\";\nimport { ThemeMode } from \"../../Enums/Modes/ThemeMode.js\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = mode => {\n            return (this.themes.find(theme => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find(theme => theme.default.value && theme.default.mode === ThemeMode.any));\n        };\n        this._importPreset = preset => {\n            this.load(this._engine.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.clear = true;\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, preset => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.clear !== undefined) {\n            this.clear = data.clear;\n        }\n        if (data.key !== undefined) {\n            this.key = data.key;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map(t => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find(t => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(ThemeMode.dark)?.name;\n        this.defaultThemes.light = this._findDefaultTheme(ThemeMode.light)?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find(t => t.mode === ResponsiveMode.screen && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find(theme => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch?.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? ThemeMode.dark : ThemeMode.light);\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export var InteractorType;\n(function (InteractorType) {\n    InteractorType[\"external\"] = \"external\";\n    InteractorType[\"particles\"] = \"particles\";\n})(InteractorType || (InteractorType = {}));\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case InteractorType.external:\n                    this._externalInteractors.push(interactor);\n                    break;\n                case InteractorType.particles:\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n","export var ParticleOutType;\n(function (ParticleOutType) {\n    ParticleOutType[\"normal\"] = \"normal\";\n    ParticleOutType[\"inside\"] = \"inside\";\n    ParticleOutType[\"outside\"] = \"outside\";\n})(ParticleOutType || (ParticleOutType = {}));\n","import { Vector, Vector3d } from \"./Utils/Vectors.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils.js\";\nimport { decayOffset, defaultRadius, defaultRetryCount, double, errorPrefix, half, millisecondsToSeconds, minRetries, minZ, none, randomColorValue, rollFactor, squareExp, tryCountIncrement, } from \"./Utils/Constants.js\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils.js\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\nimport { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { OutMode } from \"../Enums/Modes/OutMode.js\";\nimport { ParticleOutType } from \"../Enums/Types/ParticleOutType.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n    const effectData = effectOptions.options[effect];\n    if (!effectData) {\n        return;\n    }\n    return deepExtend({\n        close: effectOptions.close,\n        fill: effectOptions.fill,\n    }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n    const shapeData = shapeOptions.options[shape];\n    if (!shapeData) {\n        return;\n    }\n    return deepExtend({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill,\n    }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * double;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n}\nexport class Particle {\n    constructor(engine, container) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\n            for (const plugin of container.plugins.values()) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + tryCountIncrement);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === MoveDirection.inside || moveOptions.direction === MoveDirection.outside) {\n                return res;\n            }\n            const rad = degToRad(getRangeValue(moveOptions.angle.value)), radOffset = degToRad(getRangeValue(moveOptions.angle.offset)), range = {\n                left: radOffset - rad * half,\n                right: radOffset + rad * half,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= minRetries && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find(particle => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = color => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = position => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? defaultRadius,\n                mode: this.options.move.center.mode ?? PixelMode.percent,\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case MoveDirection.inside:\n                    this.outType = ParticleOutType.inside;\n                    break;\n                case MoveDirection.outside:\n                    this.outType = ParticleOutType.outside;\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._engine = engine;\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\n        shapeDrawer?.particleDestroy?.(this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleDestroyed?.(this, override);\n        }\n        for (const updater of container.particles.updaters) {\n            updater.particleDestroyed?.(this, override);\n        }\n        pathGenerator?.reset(this);\n        this._engine.dispatchEvent(EventType.particleDestroyed, {\n            container: this.container,\n            data: {\n                particle: this,\n            },\n        });\n    }\n    draw(delta) {\n        const container = this.container, canvas = container.canvas;\n        for (const plugin of container.plugins.values()) {\n            canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return this.getRadius() ** squareExp * Math.PI * half;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.effectClose = true;\n        this.effectFill = true;\n        this.shapeClose = true;\n        this.shapeFill = true;\n        this.pathRotation = false;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.isRotating = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = ParticleOutType.normal;\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), { reduceDuplicates } = particlesOptions, effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type;\n        this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\n        if (overrideOptions) {\n            if (overrideOptions.effect?.type) {\n                const overrideEffectType = overrideOptions.effect.type, effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\n                if (effect) {\n                    this.effect = effect;\n                    effectOptions.load(overrideOptions.effect);\n                }\n            }\n            if (overrideOptions.shape?.type) {\n                const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n                if (shape) {\n                    this.shape = shape;\n                    shapeOptions.load(overrideOptions.shape);\n                }\n            }\n        }\n        if (this.effect === randomColorValue) {\n            const availableEffects = [...this.container.effectDrawers.keys()];\n            this.effect = availableEffects[Math.floor(getRandom() * availableEffects.length)];\n        }\n        if (this.shape === randomColorValue) {\n            const availableShapes = [...this.container.shapeDrawers.keys()];\n            this.shape = availableShapes[Math.floor(getRandom() * availableShapes.length)];\n        }\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const effectData = this.effectData;\n        if (effectData) {\n            particlesOptions.load(effectData.particles);\n        }\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\n        this.effectClose = effectData?.close ?? particlesOptions.effect.close;\n        this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.setLastZIndex(this.position.z);\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let effectDrawer = container.effectDrawers.get(this.effect);\n        if (!effectDrawer) {\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\n            if (effectDrawer) {\n                container.effectDrawers.set(this.effect, effectDrawer);\n            }\n        }\n        if (effectDrawer?.loadEffect) {\n            effectDrawer.loadEffect(this);\n        }\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\n        if (!shapeDrawer) {\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\n            if (shapeDrawer) {\n                container.shapeDrawers.set(this.shape, shapeDrawer);\n            }\n        }\n        if (shapeDrawer?.loadShape) {\n            shapeDrawer.loadShape(this);\n        }\n        const sideCountFunc = shapeDrawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this._engine, this.options.shadow.color);\n        for (const updater of particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of particles.movers) {\n            mover.init?.(this);\n        }\n        effectDrawer?.particleInit?.(container, this);\n        shapeDrawer?.particleInit?.(container, this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleCreated?.(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset?.(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","export var RangeType;\n(function (RangeType) {\n    RangeType[\"circle\"] = \"circle\";\n    RangeType[\"rectangle\"] = \"rectangle\";\n})(RangeType || (RangeType = {}));\n","import { RangeType } from \"../../Types/RangeType.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nimport { squareExp } from \"./Constants.js\";\nexport class BaseRange {\n    constructor(x, y, type) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n        this.type = type;\n    }\n}\nexport class Circle extends BaseRange {\n    constructor(x, y, radius) {\n        super(x, y, RangeType.circle);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle || range.type === RangeType.circle) {\n            const circleRange = range, rSum = r + circleRange.radius, dist = Math.sqrt(distPos.x ** squareExp + distPos.y ** squareExp);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle || range.type === RangeType.rectangle) {\n            const rectRange = range, { width, height } = rectRange.size, edges = Math.pow(distPos.x - width, squareExp) + Math.pow(distPos.y - height, squareExp);\n            return (edges <= r ** squareExp ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\nexport class Rectangle extends BaseRange {\n    constructor(x, y, width, height) {\n        super(x, y, RangeType.rectangle);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            return range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Circle, Rectangle } from \"./Ranges.js\";\nimport { double, half, subdivideCount } from \"./Constants.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some(sub => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { countOffset, defaultDensityFactor, defaultRemoveQuantity, deleteCount, errorPrefix, lengthOffset, minCount, minIndex, minLimit, posOffset, qTreeCapacity, sizeFactor, squareExp, } from \"./Utils/Constants.js\";\nimport { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { LimitMode } from \"../Enums/Modes/LimitMode.js\";\nimport { Particle } from \"./Particle.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            this._pool.push(...particles);\n        };\n        this._applyDensity = (options, manualCount, group, groupOptions) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (groupOptions?.number.limit?.value ?? numberOptions.limit.value) {\n                    this._groupLimits.set(group, groupOptions?.number.limit?.value ?? numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter(t => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = densityOptions => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultDensityFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    particle = new Particle(this._engine, this._container);\n                }\n                particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(EventType.particleAdded, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(EventType.particleRemoved, {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        options.manualParticles.forEach(p => this.addParticle(p.position ? getPosition(p.position, container.canvas.size) : undefined, p.options));\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const limitMode = this._container.actualOptions.particles.number.limit.mode, limit = group === undefined ? this._limit : (this._groupLimits.get(group) ?? this._limit), currentCount = this.count;\n        if (limit > minLimit) {\n            switch (limitMode) {\n                case LimitMode.delete: {\n                    const countToRemove = currentCount + countOffset - limit;\n                    if (countToRemove > minCount) {\n                        this.removeQuantity(countToRemove);\n                    }\n                    break;\n                }\n                case LimitMode.wait:\n                    if (currentCount >= limit) {\n                        return;\n                    }\n                    break;\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        this.update(delta);\n        for (const plugin of container.plugins.values()) {\n            canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const plugin of container.plugins.values()) {\n            handled = plugin.particlesInitialization?.() ?? handled;\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.init(container);\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i, group, override)) {\n                i--;\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(minIndex, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups, manualCount = options.manualParticles.length;\n        for (const group in groups) {\n            this._applyDensity(groups[group], manualCount, group);\n        }\n        this._applyDensity(options.particles, manualCount);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.update();\n        }\n        for (const plugin of container.plugins.values()) {\n            plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const plugin of this._container.plugins.values()) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(EventType.particleRemoved, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n","import { defaultRatio, defaultReduceFactor } from \"./Utils/Constants.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { animate, cancelAnimation, getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { clickRadius, defaultFps, defaultFpsLimit, errorPrefix, millisecondsToSeconds, minCoordinate, minFpsLimit, removeDeleteCount, removeMinIndex, touchEndLengthOffset, } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = entries => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._clickHandlers = new Map();\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this, this._engine);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n        this._engine.dispatchEvent(EventType.containerBuilt, { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        }, clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, clickRadius);\n        }, touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        }, touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        }, touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - touchEndLengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - touchEndLengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        }, touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        this._clickHandlers.set(\"click\", clickHandler);\n        this._clickHandlers.set(\"touchstart\", touchStartHandler);\n        this._clickHandlers.set(\"touchmove\", touchMoveHandler);\n        this._clickHandlers.set(\"touchend\", touchEndHandler);\n        this._clickHandlers.set(\"touchcancel\", touchCancelHandler);\n        for (const [key, handler] of this._clickHandlers) {\n            el.addEventListener(key, handler);\n        }\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    clearClickHandlers() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        for (const [key, handler] of this._clickHandlers) {\n            this.interactivity.element?.removeEventListener(key, handler);\n        }\n        this._clickHandlers.clear();\n    }\n    destroy(remove = true) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.clearClickHandlers();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const effectDrawer of this.effectDrawers.values()) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const shapeDrawer of this.shapeDrawers.values()) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        if (remove) {\n            const mainArr = this._engine.items, idx = mainArr.findIndex(t => t === this);\n            if (idx >= removeMinIndex) {\n                mainArr.splice(idx, removeDeleteCount);\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerDestroyed, { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = animate(timestamp => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const plugin of this.plugins.values()) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const plugin of this.plugins.values()) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        const { zLayers, duration, delay, fpsLimit, smooth } = this.actualOptions;\n        this.zLayers = zLayers;\n        this._duration = getRangeValue(duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        this.fpsLimit = fpsLimit > minFpsLimit ? fpsLimit : defaultFpsLimit;\n        this._smooth = smooth;\n        for (const drawer of this.effectDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const drawer of this.shapeDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const plugin of this.plugins.values()) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(EventType.containerInit, { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const plugin of this.plugins.values()) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(EventType.particlesSetup, { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(EventType.containerPaused, { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const plugin of this.plugins.values()) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerPlay, { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset(sourceOptions) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = sourceOptions;\n        this._sourceOptions = sourceOptions;\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise(resolve => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const plugin of this.plugins.values()) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(EventType.containerStarted, { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(EventType.containerStopped, { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","import { deleteCount, minIndex } from \"../Core/Utils/Constants.js\";\nexport class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners?.forEach(handler => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < minIndex) {\n            return;\n        }\n        if (length === deleteCount) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, deleteCount);\n        }\n    }\n}\n","import { canvasFirstIndex, canvasTag, errorPrefix, generatedAttribute, generatedFalse, generatedTrue, loadMinIndex, loadRandomFactor, none, one, removeDeleteCount, } from \"./Utils/Constants.js\";\nimport { executeOnSingleOrMultiple, getLogger, itemFromSingleOrMultiple } from \"../Utils/Utils.js\";\nimport { Container } from \"./Container.js\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { getRandom } from \"../Utils/NumberUtils.js\";\nasync function getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = await Promise.all([...initializers.values()].map(t => t(container)));\n        map.set(container, res);\n    }\n    return res;\n}\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return (await response.json());\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nconst getCanvasFromContainer = (domContainer) => {\n    let canvasEl;\n    if (domContainer instanceof HTMLCanvasElement || domContainer.tagName.toLowerCase() === canvasTag) {\n        canvasEl = domContainer;\n        if (!canvasEl.dataset[generatedAttribute]) {\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n    }\n    else {\n        const existingCanvases = domContainer.getElementsByTagName(canvasTag);\n        if (existingCanvases.length) {\n            canvasEl = existingCanvases[canvasFirstIndex];\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n        else {\n            canvasEl = document.createElement(canvasTag);\n            canvasEl.dataset[generatedAttribute] = generatedTrue;\n            domContainer.appendChild(canvasEl);\n        }\n    }\n    const fullPercent = \"100%\";\n    if (!canvasEl.style.width) {\n        canvasEl.style.width = fullPercent;\n    }\n    if (!canvasEl.style.height) {\n        canvasEl.style.height = fullPercent;\n    }\n    return canvasEl;\n}, getDomContainer = (id, source) => {\n    let domContainer = source ?? document.getElementById(id);\n    if (domContainer) {\n        return domContainer;\n    }\n    domContainer = document.createElement(\"div\");\n    domContainer.id = id;\n    domContainer.dataset[generatedAttribute] = generatedTrue;\n    document.body.append(domContainer);\n    return domContainer;\n};\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = [];\n        this.colorManagers = new Map();\n        this.easingFunctions = new Map();\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get items() {\n        return this._domArray;\n    }\n    get version() {\n        return \"3.9.1\";\n    }\n    async addColorManager(manager, refresh = true) {\n        this.colorManagers.set(manager.key, manager);\n        await this.refresh(refresh);\n    }\n    addConfig(config) {\n        const key = config.key ?? config.name ?? \"default\";\n        this._configs.set(key, config);\n        this._eventDispatcher.dispatchEvent(EventType.configAdded, { data: { name: key, config } });\n    }\n    async addEasing(name, easing, refresh = true) {\n        if (this.getEasing(name)) {\n            return;\n        }\n        this.easingFunctions.set(name, easing);\n        await this.refresh(refresh);\n    }\n    async addEffect(effect, drawer, refresh = true) {\n        executeOnSingleOrMultiple(effect, type => {\n            if (!this.getEffectDrawer(type)) {\n                this.effectDrawers.set(type, drawer);\n            }\n        });\n        await this.refresh(refresh);\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this._initializers.interactors.set(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this._initializers.movers.set(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this._initializers.updaters.set(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        if (!this.getPathGenerator(name)) {\n            this.pathGenerators.set(name, generator);\n        }\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        if (override || !this.getPreset(preset)) {\n            this.presets.set(preset, options);\n        }\n        await this.refresh(refresh);\n    }\n    async addShape(drawer, refresh = true) {\n        for (const validType of drawer.validTypes) {\n            if (this.getShapeDrawer(validType)) {\n                continue;\n            }\n            this.shapeDrawers.set(validType, drawer);\n        }\n        await this.refresh(refresh);\n    }\n    checkVersion(pluginVersion) {\n        if (this.version === pluginVersion) {\n            return;\n        }\n        throw new Error(`The tsParticles version is different from the loaded plugins version. Engine version: ${this.version}. Plugin version: ${pluginVersion}`);\n    }\n    clearPlugins(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this.items;\n    }\n    domItem(index) {\n        return this.item(index);\n    }\n    async getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (plugin.needsPlugin(container.actualOptions)) {\n                res.set(plugin.id, await plugin.getPlugin(container));\n            }\n        }\n        return res;\n    }\n    getEasing(name) {\n        return this.easingFunctions.get(name) ?? ((value) => value);\n    }\n    getEffectDrawer(type) {\n        return this.effectDrawers.get(type);\n    }\n    async getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    async getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find(t => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.shapeDrawers.get(type);\n    }\n    getSupportedEffects() {\n        return this.effectDrawers.keys();\n    }\n    getSupportedShapes() {\n        return this.shapeDrawers.keys();\n    }\n    async getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    item(index) {\n        const { items } = this, item = items[index];\n        if (!item || item.destroyed) {\n            items.splice(index, removeDeleteCount);\n            return;\n        }\n        return item;\n    }\n    async load(params) {\n        const id = params.id ?? params.element?.id ?? `tsparticles${Math.floor(getRandom() * loadRandomFactor)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options, currentOptions = itemFromSingleOrMultiple(options, index), { items } = this, oldIndex = items.findIndex(v => v.id.description === id), newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= loadMinIndex) {\n            const old = this.item(oldIndex), deleteCount = old ? one : none;\n            if (old && !old.destroyed) {\n                old.destroy(false);\n            }\n            items.splice(oldIndex, deleteCount, newItem);\n        }\n        else {\n            items.push(newItem);\n        }\n        const domContainer = getDomContainer(id, params.element), canvasEl = getCanvasFromContainer(domContainer);\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    loadOptions(options, sourceOptions) {\n        this.plugins.forEach(plugin => plugin.loadOptions?.(options, sourceOptions));\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        updaters.forEach(updater => updater.loadOptions?.(options, ...sourceOptions));\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        await Promise.all(this.items.map(t => t.refresh()));\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    setOnClickHandler(callback) {\n        const { items } = this;\n        if (!items.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        items.forEach(item => item.addClickHandler(callback));\n    }\n}\n","import { Engine } from \"./Core/Engine.js\";\nexport function init() {\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","import { init } from \"./init.js\";\nimport { isSsr } from \"./Utils/Utils.js\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports.js\";\nexport * from \"./export-types.js\";\nexport { tsParticles };\n","import { jsx as d } from \"react/jsx-runtime\";\nimport { useEffect as m } from \"react\";\nimport { tsParticles as s } from \"@tsparticles/engine\";\nconst f = (t) => {\n  const i = t.id ?? \"tsparticles\";\n  return m(() => {\n    let e;\n    return s.load({ id: i, url: t.url, options: t.options }).then((l) => {\n      var a;\n      e = l, (a = t.particlesLoaded) == null || a.call(t, l);\n    }), () => {\n      e == null || e.destroy();\n    };\n  }, [i, t, t.url, t.options]), /* @__PURE__ */ d(\"div\", { id: i, className: t.className });\n};\nexport {\n  f as default\n};\n","import { tsParticles as i } from \"@tsparticles/engine\";\nimport o from \"./Particles.js\";\nimport \"react/jsx-runtime\";\nimport \"react\";\nasync function n(t) {\n  await t(i);\n}\nexport {\n  o as Particles,\n  o as default,\n  n as initParticlesEngine\n};\n"],"mappings":"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"}
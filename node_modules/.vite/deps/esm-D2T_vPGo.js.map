{"version":3,"file":"esm-D2T_vPGo.js","names":["divMode","trail","container","theme","container","position","capacity","container","init"],"sources":["../../tsparticles-engine/esm/Core/Utils/Constants.js","../../tsparticles-engine/esm/Core/Utils/Vector3d.js","../../tsparticles-engine/esm/Core/Utils/Vector.js","../../tsparticles-engine/esm/Utils/NumberUtils.js","../../tsparticles-engine/esm/Utils/Utils.js","../../tsparticles-engine/esm/Utils/ColorUtils.js","../../tsparticles-engine/esm/Utils/CanvasUtils.js","../../tsparticles-engine/esm/Core/Canvas.js","../../tsparticles-engine/esm/Core/Utils/EventListeners.js","../../tsparticles-engine/esm/Options/Classes/OptionsColor.js","../../tsparticles-engine/esm/Options/Classes/Background/Background.js","../../tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../../tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","../../tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","../../tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","../../tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","../../tsparticles-engine/esm/Options/Classes/ManualParticle.js","../../tsparticles-engine/esm/Options/Classes/Responsive.js","../../tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","../../tsparticles-engine/esm/Options/Classes/Theme/Theme.js","../../tsparticles-engine/esm/Options/Classes/ColorAnimation.js","../../tsparticles-engine/esm/Options/Classes/HslAnimation.js","../../tsparticles-engine/esm/Options/Classes/AnimatableColor.js","../../tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../../tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../../tsparticles-engine/esm/Options/Classes/AnimationOptions.js","../../tsparticles-engine/esm/Options/Classes/Random.js","../../tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","../../tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../../tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","../../tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","../../tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","../../tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","../../tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","../../tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","../../tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","../../tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","../../tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","../../tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","../../tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","../../tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","../../tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","../../tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","../../tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","../../tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","../../tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","../../tsparticles-engine/esm/Utils/OptionsUtils.js","../../tsparticles-engine/esm/Options/Classes/Options.js","../../tsparticles-engine/esm/Core/Utils/InteractionManager.js","../../tsparticles-engine/esm/Core/Particle.js","../../tsparticles-engine/esm/Core/Utils/Point.js","../../tsparticles-engine/esm/Core/Utils/Range.js","../../tsparticles-engine/esm/Core/Utils/Rectangle.js","../../tsparticles-engine/esm/Core/Utils/Circle.js","../../tsparticles-engine/esm/Core/Utils/QuadTree.js","../../tsparticles-engine/esm/Core/Particles.js","../../tsparticles-engine/esm/Core/Retina.js","../../tsparticles-engine/esm/Core/Container.js","../../tsparticles-engine/esm/Utils/EventDispatcher.js","../../tsparticles-engine/esm/Core/Utils/Plugins.js","../../tsparticles-engine/esm/Core/Engine.js","../../tsparticles-engine/esm/Utils/HslColorManager.js","../../tsparticles-engine/esm/Utils/RgbColorManager.js","../../tsparticles-engine/esm/init.js","../../tsparticles-engine/esm/index.js"],"sourcesContent":["export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () => {\n                const canvas = this.container.canvas;\n                canvas && (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const ids = data.ids ?? data.elementId ?? data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn ?? data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? 50,\n                y: data.position.y ?? 50,\n                mode: data.position.mode ?? \"percent\",\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.delay = 0;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = \"auto\";\n        this.startValue = \"random\";\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (isBoolean(data.random)) {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = data.rotate?.x ?? data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = data.rotate?.y ?? data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 2;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.opacity_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width ?? data.area ?? data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height ?? data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = data.limit ?? data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.loadShape = (item, mainKey, altKey, altOverride) => {\n            if (!item) {\n                return;\n            }\n            const itemIsArray = isArray(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]), altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n            if (mainDifferentValues) {\n                this.options[mainKey] = emptyValue;\n            }\n            if (altDifferentValues && altOverride) {\n                this.options[altKey] = emptyValue;\n            }\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n            }\n        };\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        return (this.options[charKey] ?? this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options ?? data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 5;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.size_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.size_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = data.move?.collisions ?? data.move?.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = (mode) => {\n            return (this.themes.find((theme) => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n        };\n        this._importPreset = (preset) => {\n            this.load(this._engine.plugins.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina ?? data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode && interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer && drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init && mover.init(this);\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated && plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset && updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) => {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) => {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            this._removeParticle(i--, group, override) && deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update && plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) && mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n"],"mappings":"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"}